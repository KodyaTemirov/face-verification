#!/bin/bash

# Startup script –¥–ª—è Face Comparison Service
# –§–∞–π–ª: startup.sh

set -e

SERVICE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LOG_FILE="$SERVICE_DIR/logs/startup.log"
MAX_RETRIES=${MAX_RETRIES:-3}
RETRY_DELAY=${RETRY_DELAY:-30}

# –°–æ–∑–¥–∞–µ–º –ª–æ–≥ —Ñ–∞–π–ª –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
mkdir -p $(dirname "$LOG_FILE")
touch "$LOG_FILE"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU
check_gpu() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ GPU..."
    if nvidia-smi > /dev/null 2>&1; then
        GPU_INFO=$(nvidia-smi --query-gpu=name,memory.total --format=csv,noheader,nounits)
        log "GPU –¥–æ—Å—Ç—É–ø–µ–Ω: $GPU_INFO"
        return 0
    else
        log "–û–®–ò–ë–ö–ê: GPU –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
check_docker() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
    if systemctl is-active --quiet docker; then
        log "Docker –∞–∫—Ç–∏–≤–µ–Ω"
        return 0
    else
        log "–û–®–ò–ë–ö–ê: Docker –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
        log "–ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker: sudo systemctl start docker"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
check_port() {
    local port=$1
    if ss -tuln | grep -q ":$port "; then
        log "–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ü–æ—Ä—Ç $port —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
        log "–û—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç: sudo fuser -k $port/tcp"
        return 1
    else
        log "–ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω"
        return 0
    fi
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
cleanup_containers() {
    log "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    cd "$SERVICE_DIR"
    docker-compose down --remove-orphans || true
    
    # –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker system prune -f || true
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
start_service() {
    local attempt=1
    
    while [ $attempt -le $MAX_RETRIES ]; do
        log "=== –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ #$attempt ==="
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        if ! check_gpu; then
            log "–û–∂–∏–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ GPU..."
            sleep $RETRY_DELAY
            continue
        fi
        
        if ! check_docker; then
            log "Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–µ..."
            sleep $RETRY_DELAY
            continue
        fi
        
        # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        cd "$SERVICE_DIR" || {
            log "–û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–µ—Ä–µ–π—Ç–∏ –≤ $SERVICE_DIR"
            exit 1
        }
        
        # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        cleanup_containers
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
        check_port 8000
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        mkdir -p models logs temp
        
        # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
        log "–ó–∞–ø—É—Å–∫ Face Comparison Service (InsightFace)..."
        if timeout 300 docker-compose up -d --build; then
            log "–°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
            
            # –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ InsightFace –º–æ–¥–µ–ª–∏
            sleep 45
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
            local health_attempts=0
            local max_health_attempts=10
            
            while [ $health_attempts -lt $max_health_attempts ]; do
                if curl -f -s http://localhost:8000/api/v1/health > /dev/null 2>&1; then
                    log "‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU –≤ –æ—Ç–≤–µ—Ç–µ
                    HEALTH_RESPONSE=$(curl -s http://localhost:8000/api/v1/health)
                    if echo "$HEALTH_RESPONSE" | grep -q '"gpu_available":true'; then
                        log "‚úÖ GPU –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–µ—Ä–≤–∏—Å–µ"
                    else
                        log "‚ö†Ô∏è GPU –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–µ—Ä–≤–∏—Å–µ, –Ω–æ —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç"
                    fi
                    
                    return 0
                else
                    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞... ($((health_attempts + 1))/$max_health_attempts)"
                    sleep 15
                    health_attempts=$((health_attempts + 1))
                fi
            done
            
            log "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ health check"
            docker-compose logs --tail=50
            
        else
            log "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"
            docker-compose logs --tail=50
        fi
        
        attempt=$((attempt + 1))
        if [ $attempt -le $MAX_RETRIES ]; then
            log "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ $RETRY_DELAY —Å–µ–∫—É–Ω–¥..."
            sleep $RETRY_DELAY
        fi
    done
    
    log "üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å –ø–æ—Å–ª–µ $MAX_RETRIES –ø–æ–ø—ã—Ç–æ–∫"
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if command -v curl > /dev/null && [ -n "$TELEGRAM_BOT_TOKEN" ] && [ -n "$TELEGRAM_CHAT_ID" ]; then
        curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d text="üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: Face Comparison Service –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ—Å–ª–µ $MAX_RETRIES –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ $(hostname)" \
            > /dev/null 2>&1 || true
    fi
    
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop_service() {
    log "=== –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Face Comparison Service ==="
    cd "$SERVICE_DIR"
    
    # Graceful shutdown
    if docker-compose ps -q > /dev/null 2>&1; then
        log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        timeout 60 docker-compose down || {
            log "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
            docker-compose kill
            docker-compose down --remove-orphans
        }
    else
        log "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    
    log "‚úÖ –°–µ—Ä–≤–∏—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart_service() {
    log "=== –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Face Comparison Service ==="
    stop_service
    sleep 5
    start_service
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
status_service() {
    log "=== –°—Ç–∞—Ç—É—Å Face Comparison Service ==="
    cd "$SERVICE_DIR"
    
    if docker-compose ps | grep -q "Up"; then
        log "‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
        if curl -f -s http://localhost:8000/api/v1/health > /dev/null 2>&1; then
            log "‚úÖ Health check –ø—Ä–æ—à–µ–ª"
        else
            log "‚ö†Ô∏è Health check –Ω–µ –ø—Ä–æ—à–µ–ª"
        fi
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        docker-compose ps
        
    else
        log "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        exit 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'log "–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"; stop_service; exit 0' SIGTERM SIGINT

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-start}" in
    start)
        start_service
        ;;
    stop)
        stop_service
        ;;
    restart)
        restart_service
        ;;
    status)
        status_service
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status}"
        echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
        echo "  MAX_RETRIES - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∑–∞–ø—É—Å–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 3)"
        echo "  RETRY_DELAY - –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 30)"
        exit 1
        ;;
esac 