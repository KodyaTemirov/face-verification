#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API Face Comparison Service —Å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
"""
import requests
import json

def test_url_images():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API —Å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏"""
    base_url = "http://localhost:8000"
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Face Comparison Service —Å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ø—É–±–ª–∏—á–Ω—ã–µ —Ñ–æ—Ç–æ)
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º httpbin –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    test_urls = [
        "https://httpbin.org/image/jpeg",
        "https://httpbin.org/image/png",
    ]
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ URL
    print("\nüéØ –¢–µ—Å—Ç 1: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ URL")
    
    try:
        data = {
            "image1": test_urls[0],
            "image2": test_urls[1], 
            "image1_type": "url",
            "image2_type": "url",
            "model": "ArcFace",
            "threshold": 0.5
        }
        
        response = requests.post(
            f"{base_url}/api/v1/compare",
            json=data,
            timeout=30
        )
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {result}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 2: –°–º–µ—à–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç (URL + base64)
    print("\nüéØ –¢–µ—Å—Ç 2: –°–º–µ—à–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç (URL + base64)")
    
    # –ü—Ä–æ—Å—Ç–æ–µ base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–∫—Ä–∞—Å–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç 1x1)
    simple_base64 = "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCAABAAEDASIAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAv/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAX/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwA/AAAAAAAA=="
    
    try:
        data = {
            "image1": test_urls[0],
            "image2": simple_base64,
            "image1_type": "url", 
            "image2_type": "base64",
            "model": "ArcFace"
        }
        
        response = requests.post(
            f"{base_url}/api/v1/compare",
            json=data,
            timeout=30
        )
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {result}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # –¢–µ—Å—Ç 3: –¢–µ—Å—Ç —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º URL
    print("\nüéØ –¢–µ—Å—Ç 3: –¢–µ—Å—Ç —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º URL")
    
    try:
        data = {
            "image1": "https://example.com/nonexistent.jpg",
            "image2": simple_base64,
            "image1_type": "url",
            "image2_type": "base64",
            "model": "ArcFace"
        }
        
        response = requests.post(
            f"{base_url}/api/v1/compare",
            json=data,
            timeout=30
        )
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {response.text}")
        
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_url_images() 